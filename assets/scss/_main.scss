@use "variables" as *;

* {
  box-sizing: border-box;
}

body,
html {
  background-color: $dm-white;
  line-height: 1.5;
  margin: 0;
  padding: 0;
}

a {
  color: inherit;
  text-decoration: underline;
}

img {
  height: auto;
  max-width: 100%;
}

// Loading states
body.loading {
  opacity: 0.5;
  pointer-events: none;
}

body.loaded {
  opacity: 1;
  transition: opacity 300ms ease-out;
}

// Crow loading overlay
.crow-loader {
  align-items: center;
  background-color: $dm-white;
  display: flex;
  height: 100%;
  justify-content: center;
  left: 0;
  opacity: 0;
  position: fixed;
  top: 0;
  transition:
    opacity 0.3s ease,
    visibility 0.3s ease;
  visibility: hidden;
  width: 100%;
  z-index: 9999;

  &.active {
    opacity: 1;
    visibility: visible;
  }

  #crow-video {
    max-height: 200px;
    max-width: 200px;
    mix-blend-mode: multiply;
    opacity: 0.1;
  }
}

// Work item animations
.work-item {
  overflow: hidden;
  position: relative;

  .work-background {
    background-color: $dm-cyan;
    inset: 0;
    pointer-events: none;
    position: absolute;
    transform: scaleY(0);
    transform-origin: top;
    z-index: 1;
  }

  .work-title-container {
    position: relative;
    z-index: 10;

    .work-title,
    .work-title-duplicate {
      display: block;
      transition: color 0.3s ease;
    }

    .work-title-duplicate {
      left: 0;
      opacity: 0;
      pointer-events: none;
      position: absolute;
      top: 0;
    }
  }

  .work-highlights {
    position: relative;
    z-index: 10;

    > div > div {
      transition: transform 0.3s ease;

      // Keep original background colors and styling
    }
  }

  .work-arrow {
    pointer-events: none;
    position: absolute;
    z-index: 20;
  }

  &:hover {
    .work-title {
      color: $dm-black !important;
    }
  }
}

.arrow-path {
  stroke: $dm-white;
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  stroke-width: 8;
}

.prose {
  font-size: 1.125rem;
  line-height: 1.75;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: 700;
    margin-bottom: 1em;
    margin-top: 2em;
  }

  p {
    margin-bottom: 1em;
  }

  ul,
  ol {
    li {
      margin-block: 1em;

      &::before {
        background: url("data:image/svg+xml,%3Csvg width='63' height='64' viewBox='0 0 63 64' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M42.3627 23.3483L42.3624 32.7149L42.3627 42.0815L32.9961 42.0812L23.6294 42.0815L23.6297 37.0862L28.0003 37.0855L33.8353 37.0859L19.1783 22.4294L22.7114 18.8981L32.3943 28.5804L37.367 33.5531L37.3667 27.7192L37.3673 23.3486L42.3627 23.3483Z' fill='black'/%3E%3C/svg%3E")
          no-repeat center center;
        background-size: 100% 100%;
        content: "";
        display: inline-block;
        height: 1.5em;
        vertical-align: middle;
        width: 1.5em;
      }
    }
  }
}

.btn-animated {
  align-items: center;
  background-color: $dm-yellow;
  border-radius: 4rem;
  display: flex;
  gap: 1rem;
  overflow: hidden;
  padding-inline: 2.5rem 2rem;

  .btn-labels {
    position: relative;
    z-index: 1;

    .btn-label {
      display: block;
      padding-block: 0.5rem;
      pointer-events: none;
      transition: transform 0.3s ease;

      &:nth-child(2) {
        left: 0;
        position: absolute;
        top: 0;
        transform: translateY(100%);
      }
    }
  }

  .btn-arrows {
    overflow: hidden;
    position: relative;
    z-index: 1;

    .btn-arrow {
      left: 0;
      top: 0;
      transition: transform 0.3s ease;
    }

    .btn-arrow:nth-child(2) {
      position: absolute;
      transform: translate(-100%, 100%);
    }
  }

  &:hover {
    .btn-labels {
      .btn-label:nth-child(1) {
        transform: translateY(-100%);
      }

      .btn-label:nth-child(2) {
        transform: translateY(0);
      }
    }

    .btn-arrows {
      .btn-arrow:nth-child(1) {
        transform: translate(100%, -100%);
      }

      .btn-arrow:nth-child(2) {
        transform: translate(0, 0);
      }
    }
  }
}
